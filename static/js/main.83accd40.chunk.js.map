{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarverService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarverService","_apiBase","_apiKey","_baseOffset","getResourse","url","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","error","alt","RandomChar","state","loading","marverService","onCharLoaded","setState","onError","onCharLoading","updateChar","Math","floor","random","then","catch","this","clearInterval","timerId","errorMessage","spinner","content","onClick","mjolnir","Component","View","indexOf","CharList","charList","newItemLoading","charEnded","activeCharacter","onRequest","newCharList","ended","length","arr","item","props","onCharSelected","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","i","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAqBeA,EAnBG,WACd,OACI,yBAAQC,UAAU,cAAa,UAC3B,oBAAIA,UAAU,aAAY,SACtB,oBAAGC,KAAK,IAAG,UACP,+BAAM,WAAa,2BAG3B,qBAAKD,UAAU,YAAW,SACtB,+BACI,6BAAI,mBAAGC,KAAK,IAAG,SAAC,iBAAmB,IAEnC,6BAAI,mBAAGA,KAAK,IAAG,SAAC,oBAKpC,E,cCjBMC,EAAa,8DACfC,SAAW,4CAA4C,KACvDC,QAAU,0CAA0C,KACpDC,YAAc,IAAI,KAElBC,YAAW,iDAAG,WAAOC,GAAG,iGACJC,MAAMD,GAAK,KAAD,EAAnB,IAAHE,EAAG,QAEEC,GAAG,CAAD,qBACD,IAAIC,MAAM,mBAAD,OAAoBJ,EAAG,qBAAaE,EAAIG,SAAU,KAAD,kBAGvDH,EAAII,OAAO,KAAD,8EAC1B,mDARU,GAQV,KAEDC,iBAAgB,gCAAG,4GAAgC,OAAzBC,EAAM,+BAAG,EAAKV,YAAW,SAC7B,EAAKC,YAAY,GAAD,OAAI,EAAKH,SAAQ,qCAA6BY,EAAM,YAAI,EAAKX,UAAW,KAAD,EAAhG,OAAHK,EAAG,yBACFA,EAAIO,KAAKC,QAAQC,IAAI,EAAKC,sBAAoB,2CACxD,KAEDC,aAAY,iDAAG,WAAOC,GAAE,iGACF,EAAKf,YAAY,GAAD,OAAI,EAAKH,SAAQ,sBAAckB,EAAE,YAAI,EAAKjB,UAAW,KAAD,EAA7E,OAAHK,EAAG,yBACF,EAAKU,oBAAoBV,EAAIO,KAAKC,QAAQ,KAAG,2CACvD,mDAHW,GAGX,KAEDE,oBAAsB,SAACG,GACnB,MAAO,CACHD,GAAIC,EAAKD,GACTE,KAAMD,EAAKC,KACXC,YAAaF,EAAKE,YAAW,UAAMF,EAAKE,YAAYC,MAAM,EAAG,KAAI,qEACjEC,UAAWJ,EAAKI,UAAUC,KAAO,IAAML,EAAKI,UAAUE,UACtDC,SAAUP,EAAKQ,KAAK,GAAGvB,IACvBwB,KAAMT,EAAKQ,KAAK,GAAGvB,IACnByB,OAAQV,EAAKU,OAAOC,MAE5B,CAAC,IAGU/B,ICwBAgC,EAhEC,WACZ,OACI,sBAAKC,MAAM,6BAA6BC,MAAO,CAACC,OAAQ,SAAUC,WAAY,OAAQC,QAAS,SAAUC,MAAM,QAAQC,OAAO,QAAQC,QAAQ,cAAcC,oBAAoB,WAAU,UACtL,mBAAGC,UAAU,mBAAkB,SAC/B,mBAAGA,UAAU,YAAW,SACxB,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,IAAG,UAC1D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,iDAAgD,SACjE,mBAAGA,UAAU,aAAY,SACzB,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAO,UAC9D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eACjI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBAGrG,mBAAGR,UAAU,mBAAkB,SACnC,mBAAGA,UAAU,aAAY,SACzB,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAM,UAC7D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,kDAAiD,SAClE,mBAAGA,UAAU,cAAa,SAC1B,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAO,UAC9D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,QAAQC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAChI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,iBAGrG,mBAAGR,UAAU,kCAAiC,SAClD,mBAAGA,UAAU,cAAa,SAC1B,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,MAAK,UAC5D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,kDAAiD,SAClE,mBAAGA,UAAU,cAAa,SAC1B,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAO,UAC9D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eACjI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBAGrG,mBAAGR,UAAU,kCAAiC,SAClD,mBAAGA,UAAU,cAAa,SAC1B,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAM,UAC7D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,iDAAgD,SACjE,mBAAGA,UAAU,cAAa,SAC1B,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAO,UAC9D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,KAAKC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAC7H,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,gBAMrH,EC9De,MAA0B,kCCc1BK,EAZM,WACjB,OACI,qBAAKrB,MAAO,CACRG,QAAS,QACTC,MAAO,QACPC,OAAQ,QACRiB,UAAW,UACXrB,OAAQ,UACTsB,IAAKC,EAAOC,IAAI,SAE3B,ECZe,G,MAAA,IAA0B,qCCQnCC,EAAU,iKA8CX,OA9CW,oCACZC,MAAQ,CACJzC,KAAM,CAAC,EACP0C,SAAS,EACTJ,OAAO,GACV,EAEDK,cAAgB,IAAI/D,EAAgB,EAWpCgE,aAAe,SAAC5C,GACZ,EAAK6C,SAAS,CACV7C,OACA0C,SAAS,GAEjB,EAAC,EAEDI,QAAU,WACN,EAAKD,SAAS,CACVH,SAAS,EACTJ,OAAO,GAEf,EAAC,EAEDS,cAAgB,WACZ,EAAKF,SAAS,CACVH,SAAS,EACTJ,OAAO,GAEf,EAAC,EAEDU,WAAa,WACT,IAAMjD,EAAKkD,KAAKC,MAAmB,IAAbD,KAAKE,SAAiC,QAC5D,EAAKJ,gBACL,EAAKJ,cACA7C,aAAaC,GACbqD,KAAK,EAAKR,cACVS,MAAM,EAAKP,QACpB,EAAC,EA+BA,OA/BA,8CArCD,WACIQ,KAAKN,YAET,GAAC,kCAED,WACIO,cAAcD,KAAKE,QACvB,GAAC,oBAgCD,WACI,MAA+BF,KAAKb,MAA7BzC,EAAI,EAAJA,KAAM0C,EAAO,EAAPA,QAASJ,EAAK,EAALA,MAEhBmB,EAAenB,EAAQ,cAAC,EAAY,IAAK,KACzCoB,EAAUhB,EAAU,cAAC,EAAO,IAAK,KACjCiB,EAAYjB,GAAWJ,EAA+B,KAAtB,cAAC,EAAI,CAACtC,KAAMA,IAElD,OACI,sBAAKtB,UAAU,aAAY,UACtB+E,EACAC,EACAC,EAED,sBAAKjF,UAAU,qBAAoB,UAC/B,oBAAGA,UAAU,oBAAmB,UAAC,8BACF,uBAAK,4CAGpC,mBAAGA,UAAU,oBAAmB,SAAC,0BAGjC,wBAAQA,UAAU,sBACVkF,QAASN,KAAKN,WAAW,SAC7B,qBAAKtE,UAAU,QAAO,SAAC,aAE3B,qBAAK2D,IAAKwB,EAAStB,IAAI,UAAU7D,UAAU,gCAI3D,KAAC,EA7EW,CAASoF,aAiFnBC,EAAO,SAAH,GAAgB,IAAX/D,EAAI,EAAJA,KACJC,EAAgDD,EAAhDC,KAAMC,EAA0CF,EAA1CE,YAAaE,EAA6BJ,EAA7BI,UAAWG,EAAkBP,EAAlBO,SAAUE,EAAQT,EAARS,KAE/C,OACI,sBAAK/B,UAAU,oBAAmB,UAC9B,qBAAK2D,IAAKjC,EACLmC,IAAI,mBACJ7D,UAAU,kBACVoC,OAC2C,IAAxCV,EAAU4D,QAAQ,iBACZ,CAAE5B,UAAW,SACb,CAAEA,UAAW,WAE3B,sBAAK1D,UAAU,mBAAkB,UAC7B,mBAAGA,UAAU,mBAAkB,SAAEuB,IACjC,mBAAGvB,UAAU,oBAAmB,SAC3BwB,IAEL,sBAAKxB,UAAU,mBAAkB,UAC7B,mBAAGC,KAAM4B,EAAU7B,UAAU,sBAAqB,SAC9C,qBAAKA,UAAU,QAAO,SAAC,eAE3B,mBAAGC,KAAM8B,EAAM/B,UAAU,2BAA0B,SAC/C,qBAAKA,UAAU,QAAO,SAAC,mBAM/C,EAEe8D,I,QChHTyB,G,MAAQ,iKAkDT,OAlDS,oCACVxB,MAAQ,CACJyB,SAAU,GACVxB,SAAS,EACTJ,OAAO,EACP6B,gBAAgB,EAChB1E,OAAQ,IACR2E,WAAW,EACXC,gBAAiB,MACpB,EAED1B,cAAgB,IAAI/D,EAAgB,EAMpC0F,UAAY,SAAC7E,GACT,EAAKsD,gBACL,EAAKJ,cAAcnD,iBAAiBC,GAC/B2D,KAAK,EAAKR,cACVS,MAAM,EAAKP,QACpB,EAAC,EAEDC,cAAgB,WACZ,EAAKF,SAAS,CACVsB,gBAAgB,GAExB,EAAC,EAEDvB,aAAe,SAAC2B,GACZ,IAAIC,GAAQ,EACRD,EAAYE,OAAS,IACrBD,GAAQ,GAGZ,EAAK3B,UAAS,gBAAEpD,EAAM,EAANA,OAAQyE,EAAQ,EAARA,SAAQ,MAAO,CACnCA,SAAS,GAAD,mBAAMA,GAAQ,YAAKK,IAC3B7B,SAAS,EACTyB,gBAAgB,EAChB1E,OAAQA,EAAS,EACjB2E,UAAWI,EACd,GACL,EAAC,EAED1B,QAAU,WACN,EAAKD,SAAS,CACVH,SAAS,EACTJ,OAAO,GAEf,EAAC,EAkEA,OAlEA,8CArCD,WACIgB,KAAKgB,WACT,GAAC,yBAuCD,SAAYI,GAAM,IAAD,OAEP/D,EAAQ+D,EAAI9E,KAAI,SAAA+E,GAElB,OACI,qBACIf,QAAS,WACL,EAAKgB,MAAMC,eAAeF,EAAK5E,IAC/B,EAAK8C,SAAS,CACVwB,gBAAiBM,EAAK5E,IAE9B,EACArB,UACI,EAAK+D,MAAM4B,kBAAoBM,EAAK5E,GAC9B,iCACA,aACT,UACG,qBAAKsC,IAAKsC,EAAKvE,UACVmC,IAAKoC,EAAK1E,KACVa,OACgD,IAA7C6D,EAAKvE,UAAU4D,QAAQ,iBACjB,CAAE5B,UAAW,SACb,CAAEA,UAAW,WAE/B,qBAAK1D,UAAU,aAAY,SAAEiG,EAAK1E,SAnB7B0E,EAAK5E,GAsBtB,IAEA,OACI,oBAAIrB,UAAU,aAAY,SACrBiC,GAGb,GAAC,oBAGD,WAAU,IAAD,OACL,EAAsE2C,KAAKb,MAApEyB,EAAQ,EAARA,SAAUxB,EAAO,EAAPA,QAASJ,EAAK,EAALA,MAAO6B,EAAc,EAAdA,eAAgB1E,EAAM,EAANA,OAAQ2E,EAAS,EAATA,UAEnDzD,EAAQ2C,KAAKwB,YAAYZ,GAEzBT,EAAenB,EAAQ,cAAC,EAAY,IAAK,KACzCoB,EAAUhB,EAAU,cAAC,EAAO,IAAK,KACjCiB,EAAYjB,GAAWJ,EAAiB,KAAR3B,EAEtC,OACI,sBAAKjC,UAAU,aAAY,UACtB+E,EACAC,EACAC,EAED,wBACIjF,UAAU,mCACVqG,SAAUZ,EACVP,QAAS,kBAAM,EAAKU,UAAU7E,EAAO,EACrCqB,MAAO,CAAC,QAAWsD,EAAY,OAAS,SAAS,SAEjD,qBAAK1F,UAAU,QAAO,SAAC,kBAIvC,KAAC,EApHS,CAASoF,cA6HRG,IClHAe,G,MAjBE,WACb,OACI,qCACI,mBAAGtG,UAAU,eAAc,SAAC,iDAC5B,sBAAKA,UAAU,WAAU,UACrB,sBAAKA,UAAU,yBAAwB,UACnC,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,+BAI/B,GCPMuG,G,MAAQ,iKAqDT,OArDS,oCACVxC,MAAQ,CACJzC,KAAM,KACN0C,SAAS,EACTJ,OAAO,GACV,EAEDK,cAAgB,IAAI/D,EAAgB,EAYpCoE,WAAa,WACT,IAAOkC,EAAU,EAAKN,MAAfM,OAEFA,IAIL,EAAKnC,gBAEL,EAAKJ,cACA7C,aAAaoF,GACT9B,KAAK,EAAKR,cACVS,MAAM,EAAKP,SACxB,EAAC,EAEDF,aAAe,SAAC5C,GACZ,EAAK6C,SAAS,CACV7C,OACA0C,SAAS,GAEjB,EAAC,EAEDI,QAAU,WACN,EAAKD,SAAS,CACVH,SAAS,EACTJ,OAAO,GAEf,EAAC,EAEDS,cAAgB,WACZ,EAAKF,SAAS,CACVH,SAAS,EACTJ,OAAO,GAEf,EAAC,EAoBA,OApBA,8CA5CD,WACIgB,KAAKN,YACT,GAAC,gCAED,SAAmBmC,GACX7B,KAAKsB,MAAMM,SAAWC,EAAUD,QAChC5B,KAAKN,YAEb,GAAC,oBAwCD,WACI,MAA+BM,KAAKb,MAA7BzC,EAAI,EAAJA,KAAM0C,EAAO,EAAPA,QAASJ,EAAK,EAALA,MAEhB8C,EAAWpF,GAAQ0C,GAAWJ,EAAQ,KAAO,cAAC,EAAQ,IACtDmB,EAAenB,EAAQ,cAAC,EAAY,IAAK,KACzCoB,EAAUhB,EAAU,cAAC,EAAO,IAAK,KACjCiB,EAAYjB,GAAWJ,IAAUtC,EAA8B,KAAtB,cAAC,EAAI,CAACA,KAAMA,IAE3D,OACI,sBAAKtB,UAAU,aAAY,UACtB0G,EACA3B,EACAC,EACAC,IAGb,KAAC,EAzES,CAASG,cA4EjBC,EAAO,SAAH,GAAgB,IAAX/D,EAAI,EAAJA,KACJC,EAAwDD,EAAxDC,KAAMG,EAAkDJ,EAAlDI,UAAWF,EAAuCF,EAAvCE,YAAaO,EAA0BT,EAA1BS,KAAMF,EAAoBP,EAApBO,SAAUG,EAAUV,EAAVU,OAsBrD,OACI,qCACI,sBAAKhC,UAAU,eAAc,UArBf,wEAAd0B,EACQ,qBAAKiC,IAAKjC,EAAWmC,IAAKtC,EAAMa,MAAO,CAACsB,UAAW,WAEnD,qBAAKC,IAAKjC,EAAWmC,IAAKtC,IAoB9B,gCACI,qBAAKvB,UAAU,kBAAiB,SAAEuB,IAClC,sBAAKvB,UAAU,aAAY,UACvB,mBAAGC,KAAM4B,EAAU7B,UAAU,sBAAqB,SAC9C,qBAAKA,UAAU,QAAO,SAAC,eAE3B,mBAAGC,KAAM8B,EAAM/B,UAAU,2BAA0B,SAC/C,qBAAKA,UAAU,QAAO,SAAC,oBAKvC,qBAAKA,UAAU,cAAa,SACvBwB,IAEL,qBAAKxB,UAAU,eAAc,SAAC,YAC9B,qBAAIA,UAAU,oBAAmB,UA/BjCgC,EAAO+D,OAAS,EACT,KAGH,oBAAI/F,UAAU,oBAAmB,SAAC,0DA8B9BgC,EAAOd,KAAI,SAAC+E,EAAMU,GACd,KAAIA,EAAI,IACR,OACI,oBAAY3G,UAAU,oBAAmB,SACpCiG,EAAK1E,MADDoF,EAIjB,SAKpB,EAMeJ,ICnJTK,EAAa,iKAGd,OAHc,oCACf7C,MAAQ,CACJH,OAAO,GACV,EAeA,OAfA,8CAED,SAAkBA,EAAOiD,GACrBC,QAAQC,IAAInD,EAAOiD,GACnBjC,KAAKT,SAAS,CACVP,OAAO,GAEf,GAAC,oBAED,WACI,OAAIgB,KAAKb,MAAMH,MACJ,cAAC,EAAY,IAGjBgB,KAAKsB,MAAMc,QACtB,KAAC,EAlBc,CAAS5B,aAqBbwB,ICxBA,MAA0B,mCCUnCK,EAAG,iKASJ,OATI,oCACLlD,MAAQ,CACJmD,aAAc,MACjB,EAEDf,eAAiB,SAAC9E,GACd,EAAK8C,SAAS,CACV+C,aAAc7F,GAEtB,EAAC,EAuBA,OAvBA,mCAED,WACI,OACI,sBAAKrB,UAAU,MAAK,UAChB,cAAC,EAAS,IACV,iCACI,cAAC,EAAa,UACV,cAAC,EAAU,MAEf,sBAAKA,UAAU,gBAAe,UAC1B,cAAC,EAAa,UACV,cAAC,EAAQ,CAACmG,eAAgBvB,KAAKuB,mBAGnC,cAAC,EAAa,UACV,cAAC,EAAQ,CAACK,OAAQ5B,KAAKb,MAAMmD,oBAGrC,qBAAKlH,UAAU,gBAAgB2D,IAAKwD,EAAYtD,IAAI,gBAIpE,KAAC,EAhCI,CAASuB,aAmCH6B,I,MCvCfG,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,Q","file":"static/js/main.83accd40.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","\r\n\r\nclass MarverService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=f2c13ab6f69535c61a86e989c97e34cb';\r\n    _baseOffset = 210;\r\n\r\n    getResourse = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResourse(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResourse(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : `The server doesn't have a description for this character...`,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarverService;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{\r\n            display: 'block',\r\n            width: '250px',\r\n            height: '250px',\r\n            objectFit: 'contain',\r\n            margin: '0 auto'\r\n        }} src={error} alt=\"error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react/cjs/react.production.min';\nimport MarverService from '../../services/MarverService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marverService = new MarverService();\n\n    componentDidMount() {\n        this.updateChar();\n        // this.timerId = setInterval(this.updateChar, 5000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerId);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        });\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        });\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true,\n            error: false\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marverService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\"\n                            onClick={this.updateChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} \n                 alt=\"Random character\" \n                 className=\"randomchar__img\"\n                 style={\n                    thumbnail.indexOf('not_available') !== -1 \n                        ? { objectFit: 'unset' } \n                        : { objectFit: 'cover' }\n                 }/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { Component } from 'react/cjs/react.production.min';\nimport PropTypes from 'prop-types';\n\nimport './charList.scss';\nimport MarverService from '../../services/MarverService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass CharList extends Component {\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false,\n        activeCharacter: null\n    }\n\n    marverService = new MarverService();\n\n    componentDidMount() {\n        this.onRequest()\n    }\n\n    onRequest = (offset) => {\n        this.onCharLoading();\n        this.marverService.getAllCharacters(offset)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }));\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        });\n    }\n\n\n\n    renderItems(arr) {\n\n        const items = arr.map(item => {\n\n            return (\n                <li key={item.id}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id)\n                        this.setState({\n                            activeCharacter: item.id\n                        })\n                    }}\n                    className={\n                        this.state.activeCharacter === item.id\n                            ? 'char__item char__item_selected'\n                            : 'char__item'\n                    }>\n                        <img src={item.thumbnail} \n                             alt={item.name}\n                             style={\n                                item.thumbnail.indexOf('not_available') !== -1 \n                                    ? { objectFit: 'unset' } \n                                    : { objectFit: 'cover' }\n                             }/>\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        })\n    \n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n\n    render() {\n        const {charList, loading, error, newItemLoading, offset, charEnded} = this.state;\n\n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    onClick={() => this.onRequest(offset)}\n                    style={{'display': charEnded ? 'none' : 'block'}}>\n\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\n\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react/cjs/react.production.min';\nimport PropTypes from 'prop-types';\n\nimport MarverService from '../../services/MarverService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton'\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marverService = new MarverService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marverService\n            .getCharacter(charId)\n                .then(this.onCharLoaded)\n                .catch(this.onError)\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        });\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        });\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true,\n            error: false\n        })\n    }\n\n\n\n    render() {\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton/>;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, thumbnail, description, wiki, homepage, comics} = char;\n\n    const thumbnailUpdate = () => {\n        if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n            return (<img src={thumbnail} alt={name} style={{objectFit: 'unset'}}/>)\n        } else {\n            return (<img src={thumbnail} alt={name}/>)\n        }\n    }\n\n    const comicsUpdate = () => {\n        if (comics.length > 0) {\n            return null;\n        } else {\n            return (\n                <li className=\"char__comics-item\">\n                    The server doesn't have comics with this character...\n                </li>\n            )\n        }\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                {thumbnailUpdate()}\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comicsUpdate()}\n                {\n                    comics.map((item, i) => {\n                        if (i > 10) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react/cjs/react.production.min\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        \n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}